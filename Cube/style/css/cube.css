/* 
SPINNING CUBE FROM  
http://codepen.io/mirceageorgescu/pen/roblc
 */

/* keyframes for rotating animation */
@-webkit-keyframes spin {
  from { -webkit-transform: rotateY(0); }
  to   { -webkit-transform: rotateY(360deg); }
}

/* scene wrapper */
.wrapper{
  height: 300px;
  margin-top:50px;
  position:relative;
  perspective: 800;
  perspective-origin: 50% 100px;
}

/* cube wrapper */
.cube{
  position: relative;
  margin: 0 auto;
  width: 200px;
  -webkit-transform-style: preserve-3d;
  -webkit-animation: spin 4s infinite linear;
  -webkit-transition: all 1s linear;
}

/* outer cube */
b{
  position:absolute;
  width:200px;
  height:200px;
  display:block;
  background:rgba(255,255,255,0.1);
  box-shadow:inset 0 0 30px rgba(0,0,0,0.2);
  font-size:20px;
  text-align:center;
  line-height:200px;
  color:rgba(0,0,0,0.5);
  font-family:sans-serif;
  text-transform:uppercase;
  transition: all 1s linear;
}
b.back{
  -webkit-transform: translateZ(-100px) rotateY(180deg);
}
b.right{
  -webkit-transform:rotateY(-270deg) translateX(100px);
  -webkit-transform-origin: top right;
}
b.left{
  -webkit-transform:rotateY(270deg) translateX(-100px);
  -webkit-transform-origin: center left;
}
b.top{
  -webkit-transform:rotateX(-90deg) translateY(-100px);
  -webkit-transform-origin: top center;
}
b.bottom{
  -webkit-transform:rotateX(90deg) translateY(100px);
  -webkit-transform-origin: bottom center;
}
b.front{
  -webkit-transform: translateZ(100px);
}



/* * * * * * * * * * * * * * * * * * *
 *                                    *
 *                                    *
 * PART 2, playing with this concept  *
 *                                    *
 *                                    *
 * * * * * * * * * * * * * * * * * * */

/*
  perspective is like the distance
  of the person watching to the obj
 */
figure { margin:0px;}
#myWrapper {
  width: 400px;
  height: 300px;
  position: relative;
  margin: 0 auto 40px;
  -webkit-perspective: 800px;
     -moz-perspective: 800px;
       -o-perspective: 800px;
          perspective: 800px;
}

/*
  In order to inherit the 3d
  you must use perserve-3d
 */
#card {
  width: 100%;
  height: 100%;
  position: absolute;
  -webkit-transition: -webkit-transform 1s;
     -moz-transition: -moz-transform 1s;
       -o-transition: -o-transform 1s;
          transition: transform 1s;
  -webkit-transform-style: preserve-3d;
     -moz-transform-style: preserve-3d;
       -o-transform-style: preserve-3d;
          transform-style: preserve-3d;
}


/* 
  Hide the back with 
  backface-visibility: hidden 
 */
#card figure {
  display: block;
  height: 100%;
  width: 100%;
  line-height: 260px;
  color: white;
  text-align: center;
  font-weight: bold;
  position: absolute;
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
       -o-backface-visibility: hidden;
          backface-visibility: hidden;
}
#card .myFront {
  background: red;
}
#card .myBack {
  background: blue;
      -webkit-transform: rotateY( 180deg );
         -moz-transform: rotateY( 180deg );
           -o-transform: rotateY( 180deg );
              transform: rotateY( 180deg );
}

#card:hover {
  -webkit-transform: rotateY( 180deg );
     -moz-transform: rotateY( 180deg );
       -o-transform: rotateY( 180deg );
          transform: rotateY( 180deg );  
}

/*
  We use this to flip the card
  toggle this class on click
 */
#card.flipped {
  -webkit-transform: rotateY( 180deg );
     -moz-transform: rotateY( 180deg );
       -o-transform: rotateY( 180deg );
          transform: rotateY( 180deg );
}
